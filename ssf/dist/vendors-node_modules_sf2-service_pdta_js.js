"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmy_webpack_project"] = self["webpackChunkmy_webpack_project"] || []).push([["vendors-node_modules_sf2-service_pdta_js"],{

/***/ "./node_modules/sf2-service/pdta.js":
/*!******************************************!*\
  !*** ./node_modules/sf2-service/pdta.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nvar Module = function () {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return function () {\n    var Module = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return function (Module) {\n      var Module = typeof Module != \"undefined\" ? Module : {};\n      var readyPromiseResolve, readyPromiseReject;\n      Module[\"ready\"] = new Promise(function (resolve, reject) {\n        readyPromiseResolve = resolve;\n        readyPromiseReject = reject;\n      });\n      var moduleOverrides = Object.assign({}, Module);\n      var arguments_ = [];\n      var thisProgram = \"./this.program\";\n      var quit_ = function quit_(status, toThrow) {\n        throw toThrow;\n      };\n      var ENVIRONMENT_IS_WEB = true;\n      var ENVIRONMENT_IS_WORKER = false;\n      var scriptDirectory = \"\";\n      function locateFile(path) {\n        if (Module[\"locateFile\"]) {\n          return Module[\"locateFile\"](path, scriptDirectory);\n        }\n        return scriptDirectory + path;\n      }\n      var read_, readAsync, readBinary, setWindowTitle;\n      if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n        if (ENVIRONMENT_IS_WORKER) {\n          scriptDirectory = self.location.href;\n        } else if (typeof document != \"undefined\" && document.currentScript) {\n          scriptDirectory = document.currentScript.src;\n        }\n        if (_scriptDir) {\n          scriptDirectory = _scriptDir;\n        }\n        if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n          scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n        } else {\n          scriptDirectory = \"\";\n        }\n        {\n          read_ = function read_(url) {\n            try {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, false);\n              xhr.send(null);\n              return xhr.responseText;\n            } catch (err) {\n              var data = tryParseAsDataURI(url);\n              if (data) {\n                return intArrayToString(data);\n              }\n              throw err;\n            }\n          };\n          if (ENVIRONMENT_IS_WORKER) {\n            readBinary = function readBinary(url) {\n              try {\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url, false);\n                xhr.responseType = \"arraybuffer\";\n                xhr.send(null);\n                return new Uint8Array(xhr.response);\n              } catch (err) {\n                var data = tryParseAsDataURI(url);\n                if (data) {\n                  return data;\n                }\n                throw err;\n              }\n            };\n          }\n          readAsync = function readAsync(url, onload, onerror) {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, true);\n            xhr.responseType = \"arraybuffer\";\n            xhr.onload = function () {\n              if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n                onload(xhr.response);\n                return;\n              }\n              var data = tryParseAsDataURI(url);\n              if (data) {\n                onload(data.buffer);\n                return;\n              }\n              onerror();\n            };\n            xhr.onerror = onerror;\n            xhr.send(null);\n          };\n        }\n        setWindowTitle = function setWindowTitle(title) {\n          return document.title = title;\n        };\n      } else {}\n      var out = Module[\"print\"] || console.log.bind(console);\n      var err = Module[\"printErr\"] || console.warn.bind(console);\n      Object.assign(Module, moduleOverrides);\n      moduleOverrides = null;\n      if (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n      if (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n      if (Module[\"quit\"]) quit_ = Module[\"quit\"];\n      var wasmBinary;\n      if (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n      var noExitRuntime = Module[\"noExitRuntime\"] || false;\n      if ((typeof WebAssembly === \"undefined\" ? \"undefined\" : _typeof(WebAssembly)) != \"object\") {\n        abort(\"no native wasm support detected\");\n      }\n      var wasmMemory;\n      var ABORT = false;\n      var EXITSTATUS;\n      var UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n      function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n        var endIdx = idx + maxBytesToRead;\n        var endPtr = idx;\n        while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n        if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n          return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n        }\n        var str = \"\";\n        while (idx < endPtr) {\n          var u0 = heapOrArray[idx++];\n          if (!(u0 & 128)) {\n            str += String.fromCharCode(u0);\n            continue;\n          }\n          var u1 = heapOrArray[idx++] & 63;\n          if ((u0 & 224) == 192) {\n            str += String.fromCharCode((u0 & 31) << 6 | u1);\n            continue;\n          }\n          var u2 = heapOrArray[idx++] & 63;\n          if ((u0 & 240) == 224) {\n            u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n          } else {\n            u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\n          }\n          if (u0 < 65536) {\n            str += String.fromCharCode(u0);\n          } else {\n            var ch = u0 - 65536;\n            str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n          }\n        }\n        return str;\n      }\n      function UTF8ToString(ptr, maxBytesToRead) {\n        return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n      }\n      function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n        if (!(maxBytesToWrite > 0)) return 0;\n        var startIdx = outIdx;\n        var endIdx = outIdx + maxBytesToWrite - 1;\n        for (var i = 0; i < str.length; ++i) {\n          var u = str.charCodeAt(i);\n          if (u >= 55296 && u <= 57343) {\n            var u1 = str.charCodeAt(++i);\n            u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n          }\n          if (u <= 127) {\n            if (outIdx >= endIdx) break;\n            heap[outIdx++] = u;\n          } else if (u <= 2047) {\n            if (outIdx + 1 >= endIdx) break;\n            heap[outIdx++] = 192 | u >> 6;\n            heap[outIdx++] = 128 | u & 63;\n          } else if (u <= 65535) {\n            if (outIdx + 2 >= endIdx) break;\n            heap[outIdx++] = 224 | u >> 12;\n            heap[outIdx++] = 128 | u >> 6 & 63;\n            heap[outIdx++] = 128 | u & 63;\n          } else {\n            if (outIdx + 3 >= endIdx) break;\n            heap[outIdx++] = 240 | u >> 18;\n            heap[outIdx++] = 128 | u >> 12 & 63;\n            heap[outIdx++] = 128 | u >> 6 & 63;\n            heap[outIdx++] = 128 | u & 63;\n          }\n        }\n        heap[outIdx] = 0;\n        return outIdx - startIdx;\n      }\n      function stringToUTF8(str, outPtr, maxBytesToWrite) {\n        return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n      }\n      var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n      function updateMemoryViews() {\n        var b = wasmMemory.buffer;\n        Module[\"HEAP8\"] = HEAP8 = new Int8Array(b);\n        Module[\"HEAP16\"] = HEAP16 = new Int16Array(b);\n        Module[\"HEAP32\"] = HEAP32 = new Int32Array(b);\n        Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(b);\n        Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(b);\n        Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(b);\n        Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(b);\n        Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(b);\n      }\n      var wasmTable;\n      var __ATPRERUN__ = [];\n      var __ATINIT__ = [];\n      var __ATPOSTRUN__ = [];\n      var runtimeInitialized = false;\n      function preRun() {\n        if (Module[\"preRun\"]) {\n          if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [Module[\"preRun\"]];\n          while (Module[\"preRun\"].length) {\n            addOnPreRun(Module[\"preRun\"].shift());\n          }\n        }\n        callRuntimeCallbacks(__ATPRERUN__);\n      }\n      function initRuntime() {\n        runtimeInitialized = true;\n        callRuntimeCallbacks(__ATINIT__);\n      }\n      function postRun() {\n        if (Module[\"postRun\"]) {\n          if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [Module[\"postRun\"]];\n          while (Module[\"postRun\"].length) {\n            addOnPostRun(Module[\"postRun\"].shift());\n          }\n        }\n        callRuntimeCallbacks(__ATPOSTRUN__);\n      }\n      function addOnPreRun(cb) {\n        __ATPRERUN__.unshift(cb);\n      }\n      function addOnInit(cb) {\n        __ATINIT__.unshift(cb);\n      }\n      function addOnPostRun(cb) {\n        __ATPOSTRUN__.unshift(cb);\n      }\n      var runDependencies = 0;\n      var runDependencyWatcher = null;\n      var dependenciesFulfilled = null;\n      function addRunDependency(id) {\n        runDependencies++;\n        if (Module[\"monitorRunDependencies\"]) {\n          Module[\"monitorRunDependencies\"](runDependencies);\n        }\n      }\n      function removeRunDependency(id) {\n        runDependencies--;\n        if (Module[\"monitorRunDependencies\"]) {\n          Module[\"monitorRunDependencies\"](runDependencies);\n        }\n        if (runDependencies == 0) {\n          if (runDependencyWatcher !== null) {\n            clearInterval(runDependencyWatcher);\n            runDependencyWatcher = null;\n          }\n          if (dependenciesFulfilled) {\n            var callback = dependenciesFulfilled;\n            dependenciesFulfilled = null;\n            callback();\n          }\n        }\n      }\n      function abort(what) {\n        if (Module[\"onAbort\"]) {\n          Module[\"onAbort\"](what);\n        }\n        what = \"Aborted(\" + what + \")\";\n        err(what);\n        ABORT = true;\n        EXITSTATUS = 1;\n        what += \". Build with -sASSERTIONS for more info.\";\n        var e = new WebAssembly.RuntimeError(what);\n        readyPromiseReject(e);\n        throw e;\n      }\n      var dataURIPrefix = \"data:application/octet-stream;base64,\";\n      function isDataURI(filename) {\n        return filename.startsWith(dataURIPrefix);\n      }\n      var wasmBinaryFile;\n      wasmBinaryFile = \"data:application/octet-stream;base64,\";\n      if (!isDataURI(wasmBinaryFile)) {\n        wasmBinaryFile = locateFile(wasmBinaryFile);\n      }\n      function getBinary(file) {\n        try {\n          if (file == wasmBinaryFile && wasmBinary) {\n            return new Uint8Array(wasmBinary);\n          }\n          var binary = tryParseAsDataURI(file);\n          if (binary) {\n            return binary;\n          }\n          if (readBinary) {\n            return readBinary(file);\n          }\n          throw \"both async and sync fetching of the wasm failed\";\n        } catch (err) {\n          abort(err);\n        }\n      }\n      function getBinaryPromise(binaryFile) {\n        if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n          if (typeof fetch == \"function\") {\n            return fetch(binaryFile, {\n              credentials: \"same-origin\"\n            }).then(function (response) {\n              if (!response[\"ok\"]) {\n                throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\n              }\n              return response[\"arrayBuffer\"]();\n            })[\"catch\"](function () {\n              return getBinary(binaryFile);\n            });\n          }\n        }\n        return Promise.resolve().then(function () {\n          return getBinary(binaryFile);\n        });\n      }\n      function instantiateArrayBuffer(binaryFile, imports, receiver) {\n        return getBinaryPromise(binaryFile).then(function (binary) {\n          return WebAssembly.instantiate(binary, imports);\n        }).then(function (instance) {\n          return instance;\n        }).then(receiver, function (reason) {\n          err(\"failed to asynchronously prepare wasm: \" + reason);\n          abort(reason);\n        });\n      }\n      function instantiateAsync(binary, binaryFile, imports, callback) {\n        if (!binary && typeof WebAssembly.instantiateStreaming == \"function\" && !isDataURI(binaryFile) && typeof fetch == \"function\") {\n          return fetch(binaryFile, {\n            credentials: \"same-origin\"\n          }).then(function (response) {\n            var result = WebAssembly.instantiateStreaming(response, imports);\n            return result.then(callback, function (reason) {\n              err(\"wasm streaming compile failed: \" + reason);\n              err(\"falling back to ArrayBuffer instantiation\");\n              return instantiateArrayBuffer(binaryFile, imports, callback);\n            });\n          });\n        } else {\n          return instantiateArrayBuffer(binaryFile, imports, callback);\n        }\n      }\n      function createWasm() {\n        var info = {\n          \"a\": wasmImports\n        };\n        function receiveInstance(instance, module) {\n          var exports = instance.exports;\n          Module[\"asm\"] = exports;\n          wasmMemory = Module[\"asm\"][\"e\"];\n          updateMemoryViews();\n          wasmTable = Module[\"asm\"][\"m\"];\n          addOnInit(Module[\"asm\"][\"f\"]);\n          removeRunDependency(\"wasm-instantiate\");\n          return exports;\n        }\n        addRunDependency(\"wasm-instantiate\");\n        function receiveInstantiationResult(result) {\n          receiveInstance(result[\"instance\"]);\n        }\n        if (Module[\"instantiateWasm\"]) {\n          try {\n            return Module[\"instantiateWasm\"](info, receiveInstance);\n          } catch (e) {\n            err(\"Module.instantiateWasm callback failed with error: \" + e);\n            readyPromiseReject(e);\n          }\n        }\n        instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult)[\"catch\"](readyPromiseReject);\n        return {};\n      }\n      function callRuntimeCallbacks(callbacks) {\n        while (callbacks.length > 0) {\n          callbacks.shift()(Module);\n        }\n      }\n      function intArrayToString(array) {\n        var ret = [];\n        for (var i = 0; i < array.length; i++) {\n          var chr = array[i];\n          if (chr > 255) {\n            chr &= 255;\n          }\n          ret.push(String.fromCharCode(chr));\n        }\n        return ret.join(\"\");\n      }\n      function _emitHeader(pid, bid, offset) {\n        Module.onHeader(pid, bid, Module.AsciiToString(offset));\n      }\n      function _emitSample(shdr, id, offset) {\n        Module.onSample(shdr, id, Module.AsciiToString(offset));\n      }\n      function _emitZone(pid, ref) {\n        Module.onZone(pid, ref, new Int16Array(Module.HEAPU8.buffer, ref, 60));\n      }\n      function abortOnCannotGrowMemory(requestedSize) {\n        abort(\"OOM\");\n      }\n      function _emscripten_resize_heap(requestedSize) {\n        var oldSize = HEAPU8.length;\n        requestedSize = requestedSize >>> 0;\n        abortOnCannotGrowMemory(requestedSize);\n      }\n      function getCFunc(ident) {\n        var func = Module[\"_\" + ident];\n        return func;\n      }\n      function writeArrayToMemory(array, buffer) {\n        HEAP8.set(array, buffer);\n      }\n      function ccall(ident, returnType, argTypes, args, opts) {\n        var toC = {\n          \"string\": function string(str) {\n            var ret = 0;\n            if (str !== null && str !== undefined && str !== 0) {\n              var len = (str.length << 2) + 1;\n              ret = _stackAlloc(len);\n              stringToUTF8(str, ret, len);\n            }\n            return ret;\n          },\n          \"array\": function array(arr) {\n            var ret = _stackAlloc(arr.length);\n            writeArrayToMemory(arr, ret);\n            return ret;\n          }\n        };\n        function convertReturnValue(ret) {\n          if (returnType === \"string\") {\n            return UTF8ToString(ret);\n          }\n          if (returnType === \"boolean\") return Boolean(ret);\n          return ret;\n        }\n        var func = getCFunc(ident);\n        var cArgs = [];\n        var stack = 0;\n        if (args) {\n          for (var i = 0; i < args.length; i++) {\n            var converter = toC[argTypes[i]];\n            if (converter) {\n              if (stack === 0) stack = _stackSave();\n              cArgs[i] = converter(args[i]);\n            } else {\n              cArgs[i] = args[i];\n            }\n          }\n        }\n        var ret = func.apply(null, cArgs);\n        function onDone(ret) {\n          if (stack !== 0) _stackRestore(stack);\n          return convertReturnValue(ret);\n        }\n        ret = onDone(ret);\n        return ret;\n      }\n      function AsciiToString(ptr) {\n        var str = \"\";\n        while (1) {\n          var ch = HEAPU8[ptr++ >> 0];\n          if (!ch) return str;\n          str += String.fromCharCode(ch);\n        }\n      }\n      var decodeBase64 = typeof atob == \"function\" ? atob : function (input) {\n        var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n        var output = \"\";\n        var chr1, chr2, chr3;\n        var enc1, enc2, enc3, enc4;\n        var i = 0;\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n        do {\n          enc1 = keyStr.indexOf(input.charAt(i++));\n          enc2 = keyStr.indexOf(input.charAt(i++));\n          enc3 = keyStr.indexOf(input.charAt(i++));\n          enc4 = keyStr.indexOf(input.charAt(i++));\n          chr1 = enc1 << 2 | enc2 >> 4;\n          chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n          chr3 = (enc3 & 3) << 6 | enc4;\n          output = output + String.fromCharCode(chr1);\n          if (enc3 !== 64) {\n            output = output + String.fromCharCode(chr2);\n          }\n          if (enc4 !== 64) {\n            output = output + String.fromCharCode(chr3);\n          }\n        } while (i < input.length);\n        return output;\n      };\n      function intArrayFromBase64(s) {\n        try {\n          var decoded = decodeBase64(s);\n          var bytes = new Uint8Array(decoded.length);\n          for (var i = 0; i < decoded.length; ++i) {\n            bytes[i] = decoded.charCodeAt(i);\n          }\n          return bytes;\n        } catch (_) {\n          throw new Error(\"Converting base64 string to bytes failed.\");\n        }\n      }\n      function tryParseAsDataURI(filename) {\n        if (!isDataURI(filename)) {\n          return;\n        }\n        return intArrayFromBase64(filename.slice(dataURIPrefix.length));\n      }\n      var wasmImports = {\n        \"a\": _emitHeader,\n        \"c\": _emitSample,\n        \"d\": _emitZone,\n        \"b\": _emscripten_resize_heap\n      };\n      var asm = createWasm();\n      var _wasm_call_ctors = function ___wasm_call_ctors() {\n        return (_wasm_call_ctors = Module[\"asm\"][\"f\"]).apply(null, arguments);\n      };\n      var _loadpdta = Module[\"_loadpdta\"] = function () {\n        return (_loadpdta = Module[\"_loadpdta\"] = Module[\"asm\"][\"g\"]).apply(null, arguments);\n      };\n      var _findPreset = Module[\"_findPreset\"] = function () {\n        return (_findPreset = Module[\"_findPreset\"] = Module[\"asm\"][\"h\"]).apply(null, arguments);\n      };\n      var _malloc = Module[\"_malloc\"] = function () {\n        return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"i\"]).apply(null, arguments);\n      };\n      var _filterForZone = Module[\"_filterForZone\"] = function () {\n        return (_filterForZone = Module[\"_filterForZone\"] = Module[\"asm\"][\"j\"]).apply(null, arguments);\n      };\n      var _shdrref = Module[\"_shdrref\"] = function () {\n        return (_shdrref = Module[\"_shdrref\"] = Module[\"asm\"][\"k\"]).apply(null, arguments);\n      };\n      var _presetRef = Module[\"_presetRef\"] = function () {\n        return (_presetRef = Module[\"_presetRef\"] = Module[\"asm\"][\"l\"]).apply(null, arguments);\n      };\n      var _errno_location = function ___errno_location() {\n        return (_errno_location = Module[\"asm\"][\"__errno_location\"]).apply(null, arguments);\n      };\n      var _funcs_on_exit = function ___funcs_on_exit() {\n        return (_funcs_on_exit = Module[\"asm\"][\"__funcs_on_exit\"]).apply(null, arguments);\n      };\n      var _fflush = Module[\"_fflush\"] = function () {\n        return (_fflush = Module[\"_fflush\"] = Module[\"asm\"][\"n\"]).apply(null, arguments);\n      };\n      var _free = Module[\"_free\"] = function () {\n        return (_free = Module[\"_free\"] = Module[\"asm\"][\"o\"]).apply(null, arguments);\n      };\n      var _stackSave = function stackSave() {\n        return (_stackSave = Module[\"asm\"][\"p\"]).apply(null, arguments);\n      };\n      var _stackRestore = function stackRestore() {\n        return (_stackRestore = Module[\"asm\"][\"q\"]).apply(null, arguments);\n      };\n      var _stackAlloc = function stackAlloc() {\n        return (_stackAlloc = Module[\"asm\"][\"r\"]).apply(null, arguments);\n      };\n      Module[\"ccall\"] = ccall;\n      Module[\"AsciiToString\"] = AsciiToString;\n      var calledRun;\n      dependenciesFulfilled = function runCaller() {\n        if (!calledRun) run();\n        if (!calledRun) dependenciesFulfilled = runCaller;\n      };\n      function run() {\n        if (runDependencies > 0) {\n          return;\n        }\n        preRun();\n        if (runDependencies > 0) {\n          return;\n        }\n        function doRun() {\n          if (calledRun) return;\n          calledRun = true;\n          Module[\"calledRun\"] = true;\n          if (ABORT) return;\n          initRuntime();\n          readyPromiseResolve(Module);\n          if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n          postRun();\n        }\n        if (Module[\"setStatus\"]) {\n          Module[\"setStatus\"](\"Running...\");\n          setTimeout(function () {\n            setTimeout(function () {\n              Module[\"setStatus\"](\"\");\n            }, 1);\n            doRun();\n          }, 1);\n        } else {\n          doRun();\n        }\n      }\n      if (Module[\"preInit\"]) {\n        if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [Module[\"preInit\"]];\n        while (Module[\"preInit\"].length > 0) {\n          Module[\"preInit\"].pop()();\n        }\n      }\n      run();\n      return Module.ready;\n    }(Module);\n  };\n}();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Module);\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/sf2-service/pdta.js?");

/***/ })

}]);