"use strict";(self.webpackChunksf2rend=self.webpackChunksf2rend||[]).push([[355],{355:(A,I,g)=>{function B(A){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A},B(A)}var C;g.r(I),g.d(I,{default:()=>Q});const Q=(C="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,function(){return function(A){var I,g;(A=void 0!==A?A:{}).ready=new Promise((function(A,B){I=A,g=B}));var Q,E=Object.assign({},A),i="";"undefined"!=typeof document&&document.currentScript&&(i=document.currentScript.src),C&&(i=C),i=0!==i.indexOf("blob:")?i.substr(0,i.replace(/[?#].*/,"").lastIndexOf("/")+1):"";var o,D=A.print||console.log.bind(console),n=A.printErr||console.warn.bind(console);Object.assign(A,E),E=null,A.arguments&&A.arguments,A.thisProgram&&A.thisProgram,A.quit&&A.quit,A.wasmBinary&&(o=A.wasmBinary),A.noExitRuntime,"object"!=("undefined"==typeof WebAssembly?"undefined":B(WebAssembly))&&F("no native wasm support detected");var t,a,r,e=!1,w=[],N=[],s=[],c=0,y=null,R=null;function F(I){A.onAbort&&A.onAbort(I),n(I="Aborted("+I+")"),e=!0,I+=". Build with -sASSERTIONS for more info.";var B=new WebAssembly.RuntimeError(I);throw g(B),B}var f,h,G="data:application/octet-stream;base64,";function k(A){return A.startsWith(G)}function Y(A){try{if(A==f&&o)return new Uint8Array(o);var I=L(A);if(I)return I;if(Q)return Q(A);throw"both async and sync fetching of the wasm failed"}catch(A){F(A)}}function S(A,I,g){return function(A){return o||"function"!=typeof fetch?Promise.resolve().then((function(){return Y(A)})):fetch(A,{credentials:"same-origin"}).then((function(I){if(!I.ok)throw"failed to load wasm binary file at '"+A+"'";return I.arrayBuffer()})).catch((function(){return Y(A)}))}(A).then((function(A){return WebAssembly.instantiate(A,I)})).then((function(A){return A})).then(g,(function(A){n("failed to asynchronously prepare wasm: "+A),F(A)}))}function H(I){for(;I.length>0;)I.shift()(A)}k(f="data:application/octet-stream;base64,")||(h=f,f=A.locateFile?A.locateFile(h,i):i+h);var U=[null,[],[]],u="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function J(A,I,g){for(var B=I+g,C=I;A[C]&&!(C>=B);)++C;if(C-I>16&&A.buffer&&u)return u.decode(A.subarray(I,C));for(var Q="";I<C;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var o=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|o:(7&E)<<18|i<<12|o<<6|63&A[I++])<65536)Q+=String.fromCharCode(E);else{var D=E-65536;Q+=String.fromCharCode(55296|D>>10,56320|1023&D)}}else Q+=String.fromCharCode((31&E)<<6|i)}else Q+=String.fromCharCode(E)}return Q}var M="function"==typeof atob?atob:function(A){var I,g,B,C,Q,E,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",o="",D=0;A=A.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{I=i.indexOf(A.charAt(D++))<<2|(C=i.indexOf(A.charAt(D++)))>>4,g=(15&C)<<4|(Q=i.indexOf(A.charAt(D++)))>>2,B=(3&Q)<<6|(E=i.indexOf(A.charAt(D++))),o+=String.fromCharCode(I),64!==Q&&(o+=String.fromCharCode(g)),64!==E&&(o+=String.fromCharCode(B))}while(D<A.length);return o};function L(A){if(k(A))return function(A){try{for(var I=M(A),g=new Uint8Array(I.length),B=0;B<I.length;++B)g[B]=I.charCodeAt(B);return g}catch(A){throw new Error("Converting base64 string to bytes failed.")}}(A.slice(G.length))}var d,l={b:function(I,g,B){A.onHeader(I,g,A.AsciiToString(B))},e:function(I,g){A.onZone(I,g,new Int16Array(A.HEAPU8.buffer,g,60))},d:function(A,I,g){a.copyWithin(A,I,I+g)},c:function(A){a.length,F("OOM")},a:function(A,I,g,B){for(var C,Q,E,i=0,o=0;o<g;o++){var t=r[I>>2],e=r[I+4>>2];I+=8;for(var w=0;w<e;w++)C=A,Q=a[t+w],E=void 0,E=U[C],0===Q||10===Q?((1===C?D:n)(J(E,0)),E.length=0):E.push(Q);i+=e}return r[B>>2]=i,0}},K=(function(){var I,B,C,Q,E={a:l};function i(I,g){var B,C,Q=I.exports;return A.asm=Q,B=A.asm.f.buffer,A.HEAP8=t=new Int8Array(B),A.HEAP16=new Int16Array(B),A.HEAP32=new Int32Array(B),A.HEAPU8=a=new Uint8Array(B),A.HEAPU16=new Uint16Array(B),A.HEAPU32=r=new Uint32Array(B),A.HEAPF32=new Float32Array(B),A.HEAPF64=new Float64Array(B),A.asm.n,C=A.asm.g,N.unshift(C),function(I){if(c--,A.monitorRunDependencies&&A.monitorRunDependencies(c),0==c&&(null!==y&&(clearInterval(y),y=null),R)){var g=R;R=null,g()}}(),Q}if(c++,A.monitorRunDependencies&&A.monitorRunDependencies(c),A.instantiateWasm)try{return A.instantiateWasm(E,i)}catch(A){n("Module.instantiateWasm callback failed with error: "+A),g(A)}(I=o,B=f,C=E,Q=function(A){i(A.instance)},I||"function"!=typeof WebAssembly.instantiateStreaming||k(B)||"function"!=typeof fetch?S(B,C,Q):fetch(B,{credentials:"same-origin"}).then((function(A){return WebAssembly.instantiateStreaming(A,C).then(Q,(function(A){return n("wasm streaming compile failed: "+A),n("falling back to ArrayBuffer instantiation"),S(B,C,Q)}))}))).catch(g)}(),A._malloc=function(){return(A._malloc=A.asm.h).apply(null,arguments)},A._loadpdta=function(){return(A._loadpdta=A.asm.i).apply(null,arguments)},A._findPreset=function(){return(A._findPreset=A.asm.j).apply(null,arguments)},A._shdrref=function(){return(A._shdrref=A.asm.k).apply(null,arguments)},A._presetRef=function(){return(A._presetRef=A.asm.l).apply(null,arguments)},A._instRef=function(){return(A._instRef=A.asm.m).apply(null,arguments)},A._fflush=function(){return(A._fflush=A.asm.o).apply(null,arguments)},A._free=function(){return(A._free=A.asm.p).apply(null,arguments)},function(){return(K=A.asm.q).apply(null,arguments)}),p=function(){return(p=A.asm.r).apply(null,arguments)},q=function(){return(q=A.asm.s).apply(null,arguments)};function m(){function g(){d||(d=!0,A.calledRun=!0,e||(H(N),I(A),A.onRuntimeInitialized&&A.onRuntimeInitialized(),function(){if(A.postRun)for("function"==typeof A.postRun&&(A.postRun=[A.postRun]);A.postRun.length;)I=A.postRun.shift(),s.unshift(I);var I;H(s)}()))}c>0||(function(){if(A.preRun)for("function"==typeof A.preRun&&(A.preRun=[A.preRun]);A.preRun.length;)I=A.preRun.shift(),w.unshift(I);var I;H(w)}(),c>0||(A.setStatus?(A.setStatus("Running..."),setTimeout((function(){setTimeout((function(){A.setStatus("")}),1),g()}),1)):g()))}if(A.ccall=function(I,g,B,C,Q){var E={string:function(A){var I=0;return null!=A&&0!==A&&(I=function(A){var I=function(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B<=127?I++:B<=2047?I+=2:B>=55296&&B<=57343?(I+=4,++g):I+=3}return I}(A)+1,g=q(I);return function(A,I,g){!function(A,I,g,B){if(!(B>0))return 0;for(var C=g+B-1,Q=0;Q<A.length;++Q){var E=A.charCodeAt(Q);if(E>=55296&&E<=57343&&(E=65536+((1023&E)<<10)|1023&A.charCodeAt(++Q)),E<=127){if(g>=C)break;I[g++]=E}else if(E<=2047){if(g+1>=C)break;I[g++]=192|E>>6,I[g++]=128|63&E}else if(E<=65535){if(g+2>=C)break;I[g++]=224|E>>12,I[g++]=128|E>>6&63,I[g++]=128|63&E}else{if(g+3>=C)break;I[g++]=240|E>>18,I[g++]=128|E>>12&63,I[g++]=128|E>>6&63,I[g++]=128|63&E}}I[g]=0}(A,a,I,g)}(A,g,I),g}(A)),I},array:function(A){var I,g,B=q(A.length);return I=A,g=B,t.set(I,g),B}},i=function(I){return A["_"+I]}(I),o=[],D=0;if(C)for(var n=0;n<C.length;n++){var r=E[B[n]];r?(0===D&&(D=K()),o[n]=r(C[n])):o[n]=C[n]}var e=i.apply(null,o);return function(A){return 0!==D&&p(D),function(A){return"string"===g?(I=A)?J(a,I,B):"":"boolean"===g?Boolean(A):A;var I,B}(A)}(e)},A.AsciiToString=function(A){for(var I="";;){var g=a[A++>>0];if(!g)return I;I+=String.fromCharCode(g)}},R=function A(){d||m(),d||(R=A)},A.preInit)for("function"==typeof A.preInit&&(A.preInit=[A.preInit]);A.preInit.length>0;)A.preInit.pop()();return m(),A.ready}(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{})})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,